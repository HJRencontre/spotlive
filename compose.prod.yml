services:
  reverse-proxy:
    image: traefik:v3.2
    command:
      - "--api.insecure=false"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=contact@spotlive.fr"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"
    networks:
      - web
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./letsencrypt:/letsencrypt"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.reverse-proxy.rule=Host(`traefik.spotlive.fr`)"
      - "traefik.http.routers.reverse-proxy.service=api@internal"
      - "traefik.http.routers.reverse-proxy.entrypoints=websecure"
      - "traefik.http.routers.reverse-proxy.tls.certresolver=myresolver"
        
  api:
    build:
      context: .
      dockerfile: docker/api/Dockerfile.prod
    restart: always
    ports:
      - "3000:3000"
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.spotlive.fr`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=myresolver"
      - "traefik.http.services.api.loadbalancer.server.port=3000"

  front:
    build:
      context: .
      dockerfile: docker/front/Dockerfile.prod
    ports:
      - "8081:8081"
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=Host(`app.spotlive.fr`)"
      - "traefik.http.routers.app.entrypoints=websecure"
      - "traefik.http.routers.app.tls.certresolver=myresolver"
      - "traefik.http.services.app.loadbalancer.server.port=8081"

networks:
  web:
    external: false